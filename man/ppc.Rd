% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NMprojectExtra.R, R/sim_reestExtra.R
\name{ppc}
\alias{ppc}
\alias{ppc_whisker_plot}
\alias{ppc}
\alias{ppc_histogram_plot}
\alias{ppc_data}
\title{PPC functions: process data from simulation and plot}
\usage{
ppc_whisker_plot(d, group, var1, var2, statistic = "statistic")

ppc_histogram_plot(d, var1, var2, statistic = "statistic")

ppc_data(r, FUN, ..., pre_proc = identity, max_mod_no = NA, DV = "DV",
  statistic = "statistic")
}
\arguments{
\item{group, var1, var2}{grouping variables for plotting}

\item{statistic}{character (default = "statistic") name of statistic column
returned by FUN}

\item{r}{nm object (simulation)}

\item{FUN}{statistic function with NONMEM dataset as arg and
returns data.frame with a column "statistic"}

\item{...}{additional arguments for FUN}

\item{pre_proc}{function to mutate dataset prior to compute statistics}

\item{DV}{character (default = "DV")}

\item{max_mod_mo}{integer. Maximum model number to read (set low for debugging)}
}
\description{
PPC functions: process data from simulation and plot
}
\examples{
\dontrun{

idEXPstat <- function(d, ...){ ## example individual statistic function
 ## arg = nonmem dataset data.frame
 ## return data.frame with statistic column
  d \%>\% group_by(ID, ...) \%>\% filter(is.na(AMT)) \%>\%
    summarise(
      AUC = AUC(time = TIME, conc = DV),
      CMAX = max(DV, na.rm = TRUE),
      TMAX = TIME[which.max(DV)]
    ) \%>\%
    tidyr::gather(key = "exposure", value = "statistic", AUC:TMAX) \%>\%
    ungroup()
}

EXPstat <- function(d, ...){ ## example summary statistic function
 ## arg = nonmem dataset data.frame
 ## return data.frame with statistic column
 d \%>\% idEXPstat(...) \%>\%  ## reuse idEXPstat for individual stats
   ## summarise over study and any other variables (...)
   group_by(exposure, ...) \%>\%
   summarise(
     median = median(statistic, na.rm = TRUE),
     cv = 100*sd(statistic, na.rm = TRUE)/mean(statistic, na.rm = TRUE)
   ) \%>\%
   tidyr::gather(key = "type", value = "statistic", median:cv)
}

dppc <- m1s \%>\% ppc_data(EXPstat)

dppc \%>\% ppc_whisker_plot()
dppc \%>\% ppc_forest_plot()

}
}
\seealso{
\code{\link{nm_render}}
}
